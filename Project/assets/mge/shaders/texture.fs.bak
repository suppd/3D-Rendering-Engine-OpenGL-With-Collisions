//DIFFUSE TEXTURE FRAGMENT SHADER
#version 330

uniform vec3 diffuseColor;
uniform sampler2D diffuseTexture;
uniform vec3 lightPos; // Light position
uniform vec3 lightColor; // Light color
uniform float ambientStrength; // Ambient light strength

in vec2 TexCoord;
in vec3 FragPos;
in vec3 Normal;
out vec4 fragment_color;

void main() {
    // Ambient lighting
    vec3 ambient = ambientStrength * lightColor;

    // Diffuse lighting
    vec3 norm = normalize(Normal);
    vec3 lightDir = normalize(lightPos - FragPos);
    float diff = max(dot(norm, lightDir), 0.0);
    vec3 diffuse = diff * lightColor;

    // Combine lighting components with texture color
    vec3 textureColor = texture(diffuseTexture, TexCoord).rgb;
    vec3 result = (ambient + diffuse) * textureColor;

    fragment_color = vec4(textureColor, 1.0);
}
